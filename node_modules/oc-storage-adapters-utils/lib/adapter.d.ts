export interface BaseStorageAdapter {
    adapterType: string;
    getFile(filePath: string, force?: boolean): Promise<string>;
    getUrl: (componentName: string, version: string, fileName: string) => string;
    listSubDirectories(dir: string): Promise<string[]>;
    maxConcurrentRequests: number;
    putFile(filePath: string, fileName: string, isPrivate: boolean): Promise<unknown>;
    putFileContent(data: unknown, path: string, isPrivate: boolean): Promise<unknown>;
    isValid: () => boolean;
}
export interface StorageAdapter extends BaseStorageAdapter {
    getJson<T = unknown>(filePath: string, force?: boolean): Promise<T>;
    putDir(folderPath: string, filePath: string): Promise<unknown>;
}
export declare function processAdapter(adapter: BaseStorageAdapter): StorageAdapter;
