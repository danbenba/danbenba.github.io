"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.processAdapter = void 0;
const strings = __importStar(require("./strings"));
const node_dir_1 = __importDefault(require("node-dir"));
const util_1 = require("util");
const getPaths = (0, util_1.promisify)(node_dir_1.default.paths);
function processAdapter(adapter) {
    const getJson = (filePath, force = false) => __awaiter(this, void 0, void 0, function* () {
        const file = yield adapter.getFile(filePath, force);
        try {
            return JSON.parse(file);
        }
        catch (er) {
            throw {
                code: strings.errors.STORAGE.FILE_NOT_VALID_CODE,
                msg: strings.errors.STORAGE.FILE_NOT_VALID(filePath)
            };
        }
    });
    const putDir = (dirInput, dirOutput) => __awaiter(this, void 0, void 0, function* () {
        const paths = yield getPaths(dirInput);
        return Promise.all(paths.files.map((file) => {
            const relativeFile = file.slice(dirInput.length);
            const url = (dirOutput + relativeFile).replace(/\\/g, '/');
            const serverPattern = /(\\|\/)server\.js/;
            const dotFilePattern = /(\\|\/)\..+/;
            const privateFilePatterns = [serverPattern, dotFilePattern];
            return adapter.putFile(file, url, privateFilePatterns.some(r => r.test(relativeFile)));
        }));
    });
    return Object.assign(Object.assign({}, adapter), { getJson,
        putDir });
}
exports.processAdapter = processAdapter;
