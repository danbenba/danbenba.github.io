/// <reference types="node" />
/// <reference types="node" />
import { StorageAdapter, StorageAdapterBaseConfig } from 'oc-storage-adapters-utils';
import type { Agent as httpAgent } from 'http';
import type { Agent as httpsAgent } from 'https';
declare type RequireAllOrNone<ObjectType, KeysType extends keyof ObjectType = never> = (Required<Pick<ObjectType, KeysType>> | Partial<Record<KeysType, never>>) & // Require none of the given keys.
Omit<ObjectType, KeysType>;
export declare type S3Config = StorageAdapterBaseConfig & RequireAllOrNone<{
    bucket: string;
    region: string;
    key?: string;
    secret?: string;
    sslEnabled?: boolean;
    s3ForcePathStyle?: boolean;
    timeout?: number;
    agentProxy?: httpAgent | httpsAgent;
    endpoint?: string;
    debug?: boolean;
}, 'key' | 'secret'>;
export default function s3Adapter(conf: S3Config): StorageAdapter;
export {};
