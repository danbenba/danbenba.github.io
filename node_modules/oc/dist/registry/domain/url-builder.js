"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.queryString = exports.componentPreview = exports.componentInfo = exports.component = void 0;
const querystring_1 = __importDefault(require("querystring"));
const url_1 = __importDefault(require("url"));
function componentForType(component, baseUrl, type) {
    if (typeof component === 'string') {
        component = { name: component };
    }
    let href = url_1.default.resolve(baseUrl, component.name) + '/';
    if (component.version) {
        href += component.version + '/';
    }
    href += '~' + type;
    return href;
}
function component(component, baseUrl) {
    if (typeof component === 'string') {
        component = { name: component };
    }
    let componentUrl = url_1.default.resolve(baseUrl, component.name);
    if (component.version) {
        componentUrl += '/' + component.version;
    }
    componentUrl += queryString(component.parameters);
    return componentUrl;
}
exports.component = component;
function componentInfo(component, baseUrl) {
    return componentForType(component, baseUrl, 'info');
}
exports.componentInfo = componentInfo;
function componentPreview(component, baseUrl) {
    let href = componentForType(component, baseUrl, 'preview');
    if (!!component.parameters && Object.keys(component.parameters).length) {
        href += '/?' + querystring_1.default.stringify(component.parameters);
    }
    else {
        href += '/';
    }
    return href;
}
exports.componentPreview = componentPreview;
function queryString(parameters = {}) {
    let qs = '';
    if (Object.keys(parameters).length > 0) {
        qs += '?';
        for (const [key, parameter] of Object.entries(parameters)) {
            qs += key + '=' + encodeURIComponent(parameter) + '&';
        }
        if (Object.keys(parameters).length > 0) {
            qs = qs.slice(0, -1);
        }
    }
    return qs;
}
exports.queryString = queryString;
