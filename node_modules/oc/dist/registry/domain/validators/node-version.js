"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const semver_1 = __importDefault(require("semver"));
const fs_extra_1 = __importDefault(require("fs-extra"));
const path_1 = __importDefault(require("path"));
const packageInfo = fs_extra_1.default.readJsonSync(path_1.default.join(__dirname, '..', '..', '..', '..', 'package.json'));
function nodeVersion(userAgent, nodeVersion) {
    const baseError = (opts = {}) => ({
        isValid: false,
        error: {
            suggestedVersion: packageInfo.engines.node || '*',
            registryNodeVersion: nodeVersion,
            cliNodeVersion: '',
            code: '',
            ...opts
        }
    });
    if (!userAgent) {
        return baseError({ code: 'empty' });
    }
    const matchVersion = /.*\/v([\w|.]+)-.*/.exec(userAgent);
    if (!matchVersion) {
        return baseError({
            code: 'not_valid',
            cliNodeVersion: 'not-valid'
        });
    }
    const cliNodeVersion = matchVersion[1];
    if (!semver_1.default.satisfies(cliNodeVersion, packageInfo.engines.node)) {
        return baseError({
            code: 'not_matching',
            cliNodeVersion
        });
    }
    return { isValid: true };
}
exports.default = nodeVersion;
