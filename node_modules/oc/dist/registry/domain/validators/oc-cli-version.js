"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const semver_1 = __importDefault(require("semver"));
const fs_extra_1 = __importDefault(require("fs-extra"));
const path_1 = __importDefault(require("path"));
const packageInfo = fs_extra_1.default.readJsonSync(path_1.default.join(__dirname, '..', '..', '..', '..', 'package.json'));
function ocCliVersion(userAgent) {
    const baseError = (opts = {}) => ({
        isValid: false,
        error: {
            suggestedVersion: `${semver_1.default.major(packageInfo.version)}.${semver_1.default.minor(packageInfo.version)}.X`,
            registryVersion: packageInfo.version,
            cliVersion: '',
            code: '',
            ...opts
        }
    });
    if (!userAgent) {
        return baseError({ code: 'empty' });
    }
    const matchVersion = /oc-cli-([\w|.]+).*/.exec(userAgent);
    if (!matchVersion) {
        return baseError({ code: 'not_valid', cliVersion: 'not_valid' });
    }
    const cliVersion = matchVersion[1];
    if (semver_1.default.lt(cliVersion, packageInfo.version)) {
        return baseError({ code: 'old_version', cliVersion });
    }
    return { isValid: true };
}
exports.default = ocCliVersion;
