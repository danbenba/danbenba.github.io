"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const builtin_modules_1 = __importDefault(require("builtin-modules"));
const path_1 = __importDefault(require("path"));
const require_package_name_1 = __importDefault(require("require-package-name"));
const try_require_1 = __importDefault(require("try-require"));
const resources_1 = __importDefault(require("../../resources"));
const isCoreDependency = (x) => builtin_modules_1.default.includes(x);
const requireCoreDependency = (x) => (isCoreDependency(x) && (0, try_require_1.default)(x)) || undefined;
const requireDependency = (requirePath) => {
    const nodeModulesPath = path_1.default.resolve('.', 'node_modules');
    const modulePath = path_1.default.resolve(nodeModulesPath, requirePath);
    return (0, try_require_1.default)(modulePath);
};
const throwError = (requirePath) => {
    throw {
        code: resources_1.default.errors.registry.DEPENDENCY_NOT_FOUND_CODE,
        missing: [requirePath]
    };
};
exports.default = (injectedDependencies) => (requirePath) => {
    const moduleName = (0, require_package_name_1.default)(requirePath);
    const isAllowed = injectedDependencies.includes(moduleName);
    if (!isAllowed) {
        return throwError(requirePath);
    }
    return (requireDependency(requirePath) ||
        requireCoreDependency(requirePath) ||
        throwError(requirePath));
};
