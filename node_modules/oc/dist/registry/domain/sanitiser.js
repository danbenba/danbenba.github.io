"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sanitiseComponentParameters = void 0;
const sanitise = {
    booleanParameter(variable) {
        if (typeof variable === 'string') {
            if (variable === 'true') {
                return true;
            }
            else if (variable === 'false') {
                return false;
            }
        }
        return variable;
    },
    numberParameter(variable) {
        return Number(variable);
    },
    stringParameter(variable) {
        return variable == null ? '' : variable;
    },
    parameter(variable, type) {
        if (type === 'boolean') {
            return sanitise.booleanParameter(variable);
        }
        else if (type === 'number') {
            return sanitise.numberParameter(variable);
        }
        else if (type === 'string') {
            return sanitise.stringParameter(variable);
        }
        return variable;
    }
};
const toRemove = ['__ocAcceptLanguage'];
function sanitiseComponentParameters(requestParameters, expectedParameters) {
    const result = {};
    for (const [requestParameterName, requestParameter] of Object.entries(requestParameters)) {
        if (typeof expectedParameters === 'object' &&
            // eslint-disable-next-line no-prototype-builtins
            expectedParameters.hasOwnProperty(requestParameterName)) {
            const expectedType = expectedParameters[requestParameterName].type;
            const sanitised = sanitise.parameter(requestParameter, expectedType);
            result[requestParameterName] = sanitised;
        }
        else if (!toRemove.includes(requestParameterName)) {
            result[requestParameterName] = requestParameter;
        }
    }
    return result;
}
exports.sanitiseComponentParameters = sanitiseComponentParameters;
