"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_extra_1 = __importDefault(require("fs-extra"));
const path_1 = __importDefault(require("path"));
const storageUtils = __importStar(require("oc-storage-adapters-utils"));
function staticRedirector(repository) {
    return function (req, res) {
        let filePath;
        const clientPath = `${res.conf.prefix || '/'}oc-client/client.js`;
        const clientMapPath = `${res.conf.prefix || '/'}oc-client/oc-client.min.map`;
        if (req.route.path === clientPath) {
            if (res.conf.local) {
                filePath = path_1.default.join(__dirname, '../../components/oc-client/_package/src/oc-client.min.js');
            }
            else {
                return res.redirect(repository.getStaticClientPath());
            }
        }
        else if (req.route.path === clientMapPath) {
            if (res.conf.local) {
                filePath = path_1.default.join(__dirname, '../../components/oc-client/_package/src/oc-client.min.map');
            }
            else {
                return res.redirect(repository.getStaticClientMapPath());
            }
        }
        else if (req.params['componentName'] === 'oc-client') {
            filePath = path_1.default.join(__dirname, '../../components/oc-client/_package/' + req.params[0]);
        }
        else {
            filePath =
                path_1.default.join(res.conf.path, req.params['componentName']) +
                    '/_package/' +
                    req.params[0];
        }
        if (!fs_extra_1.default.existsSync(filePath)) {
            res.errorDetails = `File ${filePath} not found`;
            res.status(404).json({ err: res.errorDetails });
            return;
        }
        const stats = fs_extra_1.default.statSync(filePath);
        if (stats.isDirectory()) {
            res.errorDetails = 'Forbidden: Directory Listing Denied';
            res.status(403).json({ err: res.errorDetails });
            return;
        }
        const fileStream = fs_extra_1.default.createReadStream(filePath);
        const fileInfo = storageUtils.getFileInfo(filePath);
        if (fileInfo.mimeType) {
            res.set('Content-Type', fileInfo.mimeType);
        }
        if (fileInfo.gzip) {
            res.set('Content-Encoding', 'gzip');
        }
        fileStream.on('open', () => {
            fileStream.pipe(res);
        });
    };
}
exports.default = staticRedirector;
