/// <reference types="node" />
import { Request, Response } from 'express';
import { IncomingHttpHeaders } from 'http';
import { Component, Config } from '../../../types';
import { GetComponentResult } from './get-component';
type ComponentCallback = (err: {
    registryError: any;
    fallbackError: any;
} | null, data: Component) => void;
export declare function getComponent(fallbackRegistryUrl: string, headers: IncomingHttpHeaders, component: {
    name: string;
    version: string;
    parameters: IncomingHttpHeaders;
}, callback: (result: GetComponentResult) => void): void;
export declare function getComponentPreview(conf: Config, req: Request, res: Response, registryError: string | null, callback: ComponentCallback): void;
export declare function getComponentInfo(conf: Config, req: Request, res: Response, registryError: string | null, callback: ComponentCallback): void;
export {};
