/// <reference types="node" />
import type { Repository } from '../../domain/repository';
import { Config } from '../../../types';
import { IncomingHttpHeaders } from 'http';
export interface RendererOptions {
    conf: Config;
    headers: IncomingHttpHeaders;
    ip: string;
    name: string;
    parameters: Record<string, string>;
    version: string;
    omitHref?: boolean;
}
export interface GetComponentResult {
    status: number;
    headers?: Record<string, string>;
    response: {
        type?: string;
        code?: string;
        error?: unknown;
        version?: string;
        html?: string;
        requestVersion?: string;
        name?: string;
        details?: {
            message: string;
            stack: string;
            originalError: unknown;
        };
        missingPlugins?: string[];
        missingDependencies?: string[];
    };
}
export default function getComponent(conf: Config, repository: Repository): (options: RendererOptions, cb: (result: GetComponentResult) => void) => void;
