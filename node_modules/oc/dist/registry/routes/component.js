"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const serialize_error_1 = require("serialize-error");
const lodash_1 = __importDefault(require("lodash"));
const get_component_1 = __importDefault(require("./helpers/get-component"));
const resources_1 = __importDefault(require("../../resources"));
function component(conf, repository) {
    const getComponent = (0, get_component_1.default)(conf, repository);
    return (req, res) => {
        getComponent({
            conf: res.conf,
            headers: req.headers,
            ip: req.ip,
            name: req.params['componentName'],
            parameters: req.query,
            version: req.params['componentVersion']
        }, result => {
            if (result.response.error) {
                if (lodash_1.default.isError(result.response.error)) {
                    result.response.error = (0, serialize_error_1.serializeError)(result.response.error);
                }
                res.errorCode = result.response.code;
                res.errorDetails = result.response.error;
            }
            try {
                if (!lodash_1.default.isEmpty(result.headers)) {
                    res.set(result.headers);
                }
                res.status(result.status).json(result.response);
            }
            catch (e) {
                res.status(500).json({
                    code: 'RENDER_ERROR',
                    error: resources_1.default.errors.registry.RENDER_ERROR(`${result.response.name}@${result.response.version}`, String(e))
                });
            }
        });
    };
}
exports.default = component;
