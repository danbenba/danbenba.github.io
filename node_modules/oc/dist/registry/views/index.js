"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const components_dependencies_1 = __importDefault(require("./partials/components-dependencies"));
const components_history_1 = __importDefault(require("./partials/components-history"));
const components_list_1 = __importDefault(require("./partials/components-list"));
const components_templates_1 = __importDefault(require("./partials/components-templates"));
const components_plugins_1 = __importDefault(require("./partials/components-plugins"));
const index_1 = __importDefault(require("./static/index"));
const layout_1 = __importDefault(require("./partials/layout"));
const property_1 = __importDefault(require("./partials/property"));
function indexView(vm) {
    const tabs = {
        dependencies: (0, components_dependencies_1.default)(vm),
        history: (0, components_history_1.default)(vm),
        list: (0, components_list_1.default)(vm),
        templates: (0, components_templates_1.default)(vm),
        plugins: (0, components_plugins_1.default)(vm)
    };
    const layout = (0, layout_1.default)(vm);
    const property = (0, property_1.default)();
    const getCount = (state) => vm.stateCounts[state] || 0;
    const isLocal = vm.type !== 'oc-registry';
    const componentsValue = `${vm.components.length} (${getCount('experimental')} experimental, ${getCount('deprecated')} deprecated)`;
    const extraLinks = ` | <a href="#components-history" class="tab-link">History</a>` +
        ` | <a href="#components-templates" class="tab-link">Available templates</a>` +
        ` | <a href="#components-dependencies" class="tab-link">Available dependencies</a>` +
        ` | <a href="#components-plugins" class="tab-link">Available plugins</a>`;
    const registryType = isLocal ? 'Local dev registry' : 'On-line registry';
    const componentReleases = !isLocal
        ? property('Components releases', vm.componentsReleases)
        : '';
    const content = `${property('Base url', vm.href, true)}
    ${property('Version', vm.ocVersion)}
    ${property('Components', componentsValue)}
    ${componentReleases}
    ${property('Registry type', registryType)}
    <h2 id="menuList">
      <a href="#components-list" class="tab-link">Components</a>
      ${!isLocal ? extraLinks : ''}
    </h2>
    ${tabs.list}
    ${tabs.history}
    ${tabs.templates}
    ${tabs.dependencies}
    ${tabs.plugins}`;
    const scripts = `<script>
    var q = "${encodeURIComponent(vm.q)}", componentsList = ${JSON.stringify(vm.componentsList)};
${index_1.default}</script>`;
    return layout({ content, scripts });
}
exports.default = indexView;
