"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.create = void 0;
const component_1 = __importDefault(require("./routes/component"));
const components_1 = __importDefault(require("./routes/components"));
const component_info_1 = __importDefault(require("./routes/component-info"));
const component_preview_1 = __importDefault(require("./routes/component-preview"));
const routes_1 = __importDefault(require("./routes"));
const publish_1 = __importDefault(require("./routes/publish"));
const static_redirector_1 = __importDefault(require("./routes/static-redirector"));
const plugins_1 = __importDefault(require("./routes/plugins"));
const dependencies_1 = __importDefault(require("./routes/dependencies"));
const settings_1 = __importDefault(require("../resources/settings"));
function create(app, conf, repository) {
    const routes = {
        component: (0, component_1.default)(conf, repository),
        components: (0, components_1.default)(conf, repository),
        componentInfo: (0, component_info_1.default)(conf, repository),
        componentPreview: (0, component_preview_1.default)(conf, repository),
        index: (0, routes_1.default)(repository),
        publish: (0, publish_1.default)(repository),
        staticRedirector: (0, static_redirector_1.default)(repository),
        plugins: (0, plugins_1.default)(conf),
        dependencies: (0, dependencies_1.default)(conf)
    };
    const prefix = conf.prefix;
    if (prefix !== '/') {
        app.get('/', (_req, res) => res.redirect(prefix));
        app.get(prefix.substr(0, prefix.length - 1), routes.index);
    }
    app.get(`${prefix}oc-client/client.js`, routes.staticRedirector);
    app.get(`${prefix}oc-client/oc-client.min.map`, routes.staticRedirector);
    app.get(`${prefix}~registry/plugins`, routes.plugins);
    app.get(`${prefix}~registry/dependencies`, routes.dependencies);
    if (conf.local) {
        app.get(`${prefix}:componentName/:componentVersion/${settings_1.default.registry.localStaticRedirectorPath}*`, routes.staticRedirector);
    }
    else {
        app.put(`${prefix}:componentName/:componentVersion`, conf.beforePublish, routes.publish);
    }
    app.get(prefix, routes.index);
    app.post(prefix, routes.components);
    app.get(`${prefix}:componentName/:componentVersion${settings_1.default.registry.componentInfoPath}`, routes.componentInfo);
    app.get(`${prefix}:componentName${settings_1.default.registry.componentInfoPath}`, routes.componentInfo);
    app.get(`${prefix}:componentName/:componentVersion${settings_1.default.registry.componentPreviewPath}`, routes.componentPreview);
    app.get(`${prefix}:componentName${settings_1.default.registry.componentPreviewPath}`, routes.componentPreview);
    app.get(`${prefix}:componentName/:componentVersion`, routes.component);
    app.get(`${prefix}:componentName`, routes.component);
    if (conf.routes) {
        conf.routes.forEach(route => app[route.method.toLowerCase()](route.route, route.handler));
    }
}
exports.create = create;
