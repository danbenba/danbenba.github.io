"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_extra_1 = __importDefault(require("fs-extra"));
const path_1 = __importDefault(require("path"));
const settings_1 = __importDefault(require("../../resources/settings"));
function mock() {
    return async function (params) {
        const localConfig = await fs_extra_1.default
            .readJson(settings_1.default.configFile.src)
            .catch(() => ({}));
        const mockType = params.targetType + 's';
        if (!localConfig.mocks) {
            localConfig.mocks = {};
        }
        if (!localConfig.mocks[mockType]) {
            localConfig.mocks[mockType] = {};
        }
        let pluginType = 'static';
        if (fs_extra_1.default.existsSync(path_1.default.resolve(params.targetValue.toString()))) {
            pluginType = 'dynamic';
        }
        if (!localConfig.mocks[mockType][pluginType]) {
            localConfig.mocks[mockType][pluginType] = {};
        }
        localConfig.mocks[mockType][pluginType][params.targetName] =
            params.targetValue;
        return fs_extra_1.default.writeJson(settings_1.default.configFile.src, localConfig, { spaces: 2 });
    };
}
exports.default = mock;
