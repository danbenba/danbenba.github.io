import * as clean from './clean';
import { Logger } from '../logger';
export default function local(): {
    clean: typeof clean;
    cleanup(compressedPackagePath: string): Promise<void>;
    compress(input: string, output: string): Promise<void>;
    getComponentsByDir: (componentsDir: string, componentsToRun?: string[] | undefined) => Promise<string[]>;
    init(options: {
        componentName: string;
        logger: Logger;
        componentPath: string;
        templateType: string;
    }): Promise<void>;
    mock: (params: {
        targetType: string;
        targetValue: string;
        targetName: string;
    }) => Promise<void>;
    package: (options: import("./package-components").PackageOptions) => Promise<import("../../types").Component>;
};
export type Local = ReturnType<typeof local>;
