"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const clean_require_1 = __importDefault(require("../../../utils/clean-require"));
const is_template_legacy_1 = __importDefault(require("../../../utils/is-template-legacy"));
const is_template_valid_1 = __importDefault(require("../../../utils/is-template-valid"));
const resources_1 = __importDefault(require("../../../resources"));
function requireTemplate(template, options) {
    const requireOptions = options || {};
    let ocTemplate;
    if ((0, is_template_legacy_1.default)(template)) {
        template = `oc-template-${template}`;
    }
    if (requireOptions.compiler) {
        template = `${template}-compiler`;
    }
    const localTemplate = path_1.default.join(__dirname, '../../node_modules', template);
    const relativeTemplate = path_1.default.resolve('.', 'node_modules', template);
    const componentRelativePath = path_1.default.join(requireOptions.componentPath, 'node_modules', template);
    [componentRelativePath, template, localTemplate, relativeTemplate].forEach(pathToTry => {
        ocTemplate = ocTemplate || (0, clean_require_1.default)(pathToTry, { justTry: true });
    });
    if (!ocTemplate) {
        throw new Error(resources_1.default.errors.cli.TEMPLATE_NOT_FOUND(template));
    }
    if (!(0, is_template_valid_1.default)(ocTemplate, requireOptions)) {
        throw new Error(resources_1.default.errors.cli.TEMPLATE_TYPE_NOT_VALID(template));
    }
    return ocTemplate;
}
exports.default = requireTemplate;
