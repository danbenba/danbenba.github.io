"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const get_missing_dependencies_1 = __importDefault(require("./get-missing-dependencies"));
const npm = __importStar(require("../../../utils/npm-utils"));
const index_1 = __importDefault(require("../../../resources/index"));
async function installMissingDependencies(options) {
    const { dependencies, logger } = options;
    const missing = (0, get_missing_dependencies_1.default)(dependencies);
    if (!missing.length) {
        return;
    }
    const installPath = path_1.default.resolve('.');
    logger.warn(index_1.default.messages.cli.INSTALLING_DEPS(missing.join(', '), installPath));
    const npmOptions = {
        dependencies: missing,
        installPath,
        save: false,
        silent: false,
        usePrefix: true
    };
    try {
        await npm.installDependencies(npmOptions);
        if ((0, get_missing_dependencies_1.default)(dependencies).length) {
            logger.err('FAIL');
            throw index_1.default.errors.cli.DEPENDENCIES_INSTALL_FAIL;
        }
        logger.ok('OK');
    }
    catch (err) {
        logger.err('FAIL');
        if (err)
            logger.err(String(err));
        throw index_1.default.errors.cli.DEPENDENCIES_INSTALL_FAIL;
    }
}
exports.default = installMissingDependencies;
