"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const universalify_1 = require("universalify");
const index_1 = __importDefault(require("../../resources/index"));
const init = ({ local, logger }) => (0, universalify_1.fromPromise)(async (opts) => {
    const templateType = typeof opts.templateType === 'undefined'
        ? 'oc-template-es6'
        : opts.templateType;
    const errors = index_1.default.errors.cli;
    const messages = index_1.default.messages.cli;
    const componentPath = path_1.default.join(process.cwd(), opts.componentPath);
    const componentName = path_1.default.basename(componentPath);
    try {
        await local.init({
            componentName,
            componentPath,
            templateType,
            logger
        });
        logger.log(messages.initSuccess(componentName, componentPath));
        return componentName;
    }
    catch (err) {
        let errMsg = String(err);
        if (err === 'name not valid') {
            errMsg = errors.NAME_NOT_VALID;
        }
        else if (err === 'template type not valid') {
            errMsg = errors.TEMPLATE_TYPE_NOT_VALID(templateType);
        }
        logger.err(errors.INIT_FAIL(errMsg));
        throw err;
    }
});
exports.default = init;
